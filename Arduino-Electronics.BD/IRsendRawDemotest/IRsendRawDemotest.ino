/*
 * IRremote: IRsendRawDemo - demonstrates sending IR codes with sendRaw
 * An IR LED must be connected to Arduino PWM pin 3.
 * Version 0.1 July, 2009
 * Copyright 2009 Ken Shirriff
 * http://arcfn.com
 *
 * IRsendRawDemo - added by AnalysIR (via www.AnalysIR.com), 24 August 2015
 *
 * This example shows how to send a RAW signal using the IRremote library.
 * The example signal is actually a 32 bit NEC signal.
 * Remote Control button: LGTV Power On/Off. 
 * Hex Value: 0x20DF10EF, 32 bits
 * 
 * It is more efficient to use the sendNEC function to send NEC signals. 
 * Use of sendRaw here, serves only as an example of using the function.
 * 
 */


#include <IRremote.h>

IRsend irsend;
unsigned int ON[227] = {3150,1550, 550,1050, 550,1000, 600,250, 550,250, 600,250, 550,1050, 500,300, 550,300, 550,1000, 600,1000, 550,250, 550,1050, 550,250, 600,250, 550,1050, 600,950, 600,250, 550,1000, 600,1000, 550,300, 550,250, 600,1000, 550,250, 550,300, 550,1000, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,300, 600,200, 550,300, 600,200, 600,250, 550,250, 600,1000, 550,250, 600,250, 550,1000, 550,300, 600,250, 550,1000, 600,1000, 550,300, 550,250, 600,250, 550,250, 600,250, 550,250, 600,200, 600,1000, 550,1050, 550,250, 600,200, 550,300, 600,200, 550,300, 600,250, 550,250, 600,250, 550,250, 600,250, 600,200, 600,250, 600,200, 600,250, 600,200, 600,250, 600,200, 550,300, 600,250, 500,300, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 600,200, 600,250, 600,200, 550,300, 600,250, 500,300, 600,250, 500,300, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 550,300, 600,1000, 550,250, 600,250, 550,250, 550,250, 600,1000, 600,250, 550}; //AnalysIR Batch Export (IRremote) - RAW

unsigned int OFF[227] = {3150,1550, 550,1050, 550,1000, 600,250, 550,250, 600,250, 550,1050, 500,300, 550,300, 550,1000, 600,1000, 550,250, 550,1050, 550,250, 600,250, 550,1050, 600,950, 600,250, 550,1000, 600,1000, 550,300, 550,250, 600,1000, 550,250, 550,300, 550,1000, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,300, 600,200, 550,300, 600,200, 600,250, 550,250, 600,1000, 550,250, 600,250, 550,1000, 550,300, 600,250, 550,1000, 600,1000, 550,300, 550,250, 600,250, 550,250, 600,250, 550,250, 600,200, 600,1000, 550,1050, 550,250, 600,200, 550,300, 600,200, 550,300, 600,250, 550,250, 600,250, 550,250, 600,250, 600,200, 600,250, 600,200, 600,250, 600,200, 600,250, 600,200, 550,300, 600,250, 500,300, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 600,200, 600,250, 600,200, 550,300, 600,250, 500,300, 600,250, 500,300, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,250, 550,300, 600,1000, 550,250, 600,250, 550,250, 550,250, 600,1000, 600,250, 550};

unsigned int TEMPUP[227] = {3100,1600, 500,1050, 550,1050, 550,300, 500,300, 550,300, 500,1050, 550,250, 550,300, 550,1050, 500,1050, 550,300, 500,1100, 500,300, 550,300, 550,1000, 550,1050, 550,300, 500,1050, 550,1050, 500,300, 550,300, 550,1050, 500,300, 500,300, 550,1050, 550,250, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,1050, 500,300, 550,300, 500,1050, 550,300, 500,300, 550,1050, 550,1000, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,1050, 550,300, 500,1050, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 500,350, 500,300, 500,300, 550,300, 500,300, 550,300, 500,350, 500,300, 550,300, 500,300, 550,300, 500,1050, 550,300, 500,300, 550,300, 500,300, 550,300, 500,1100, 500,300, 550};
unsigned int TEMPDOWN[227] = {3100,1550, 550,1050, 550,1000, 550,300, 550,300, 500,300, 550,1050, 500,300, 550,300, 500,1050, 550,1050, 550,300, 500,1050, 550,300, 500,300, 550,1050, 550,1000, 550,300, 550,1050, 500,1050, 550,300, 500,300, 550,1050, 550,300, 500,300, 550,1050, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,1050, 550,300, 500,300, 550,1050, 550,250, 550,300, 500,1050, 550,1050, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,1100, 500,1050, 550,300, 500,300, 500,300, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,300, 450,350, 550,300, 500,300, 550,300, 500,300, 500,350, 500,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 500,350, 500,300, 550,300, 500,300, 550,300, 550,300, 500,300, 550,300, 500,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,300, 550,1050, 500,300, 550,300, 500,300, 550,300, 500,1050, 550,300, 550};
unsigned int MODE[227] = {3100,1600, 500,1050, 600,1000, 550,300, 500,300, 550,250, 550,1050, 550,300, 550,250, 500,1100, 550,1050, 550,250, 550,1000, 600,250, 550,300, 550,1000, 600,1000, 550,300, 500,1050, 600,1000, 550,250, 550,300, 550,1000, 550,300, 550,250, 550,1050, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 600,250, 550,250, 600,250, 550,250, 600,250, 550,300, 500,300, 550,300, 550,250, 550,1000, 550,300, 600,250, 550,1000, 600,250, 550,300, 500,250, 600,1000, 550,300, 600,200, 550,300, 600,250, 550,250, 550,300, 550,250, 550,300, 550,250, 550,1050, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 600,250, 550,250, 550,300, 550,300, 550,250, 550,300, 550,250, 550,250, 600,250, 550,300, 550,250, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 600,250, 550,250, 550,300, 550,1050, 500,1050, 600,200, 550,300, 550,300, 550,250, 550,1050, 550,250, 550};
unsigned int SWING[227] = {3100,1550, 550,1050, 550,1000, 550,300, 500,300, 550,300, 550,1050, 500,300, 550,300, 550,1000, 550,1050, 550,250, 550,1050, 550,250, 600,250, 550,1050, 500,1050, 550,300, 500,1050, 550,1050, 550,300, 500,300, 550,1050, 500,300, 550,300, 500,1100, 500,300, 550,300, 500,300, 550,250, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,1050, 500,300, 550,300, 500,1100, 500,300, 550,300, 500,300, 550,1050, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,250, 550,1050, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,300, 500,1050, 550,1050, 500,1100, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 600,250, 500,300, 550,300, 500,300, 550,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,1050, 550,1050, 550,250, 550,1050, 550,1000, 550,1050, 550,1050, 500,300, 550};
unsigned int FAN[227] = {3100,1600, 500,1050, 550,1050, 500,350, 500,300, 500,350, 500,1050, 600,250, 500,300, 550,1000, 600,1000, 550,300, 500,1100, 550,250, 500,350, 550,1000, 550,1050, 550,250, 550,1050, 550,1050, 500,300, 550,300, 500,1050, 550,250, 600,250, 550,1050, 550,250, 550,300, 500,350, 550,250, 500,300, 600,250, 500,350, 550,250, 500,300, 550,300, 550,300, 500,300, 550,250, 550,300, 550,300, 500,300, 550,300, 500,1100, 500,300, 500,300, 550,1050, 600,200, 550,300, 600,1000, 550,1000, 550,300, 500,300, 550,300, 500,300, 550,300, 500,300, 550,300, 500,1050, 600,1000, 550,250, 550,300, 600,250, 500,300, 600,200, 550,350, 550,1000, 550,250, 550,300, 600,200, 550,300, 600,200, 550,300, 600,250, 500,300, 550,300, 500,300, 500,350, 500,300, 500,350, 500,350, 500,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 550,300, 500,300, 500,350, 500,300, 500,350, 500,300, 500,350, 550,250, 500,350, 550,250, 550,300, 550,250, 550,300, 550,250, 550,300, 500,300, 550,300, 500,1100, 550,250, 500,350, 550,250, 500,1050, 550,300, 550};
void setup()
{
Serial.begin(115200);
}

void loop() {
  int khz = 38; // 38kHz carrier frequency for the NEC protocol

  irsend.sendRaw(SWING, 227, khz); //Note the approach used to automatically calculate the size of the array.
  Serial.print("test");
  delay(5000); //In this example, the signal will be repeated every 5 seconds, approximately.
}

